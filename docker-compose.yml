version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: recommendation-engine-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: recommendation-engine
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - recommendation-network

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: recommendation-engine-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - recommendation-network

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: recommendation-engine-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/recommendation-engine?authSource=admin
      REDIS_URL: redis://redis:6379
      FOURSQUARE_API_KEY: ${FOURSQUARE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server/logs:/app/logs
    networks:
      - recommendation-network

  # Frontend React App
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000/api
    container_name: recommendation-engine-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - server
    networks:
      - recommendation-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  recommendation-network:
    driver: bridge
